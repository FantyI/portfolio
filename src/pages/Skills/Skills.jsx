
import { useState } from 'react';
import Heading from '../../components/Heading/Heading';
import SkillCard from '../../components/SkillCard/SkillCard';
import s from './style.module.css';

const Skills = () => {

   const skills = [
      {
         name: 'HTML',
         tag: ['All', 'Frontend'],
         icon: <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M0 0L2 22L12 24L22 22L24 0H0ZM19.72 7H7.28L7.57 10H19.43L18.628 19.335L11.99 21L5.355 19.354L4.93 15H7.95L8.14 17L12 17.77L15.84 17L16.13 13H4.84L4 4H20L19.72 7Z" fill="#E65100" />
         </svg>
      },
      {
         name: 'Figma',
         tag: ['All', 'Design'],
         icon: <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M6 16.125C6 13.15 8.4 10.75 11.375 10.75H16.75V21.5H11.375C8.4 21.5 6 19.1 6 16.125Z" fill="#A259FF" />
            <path d="M11.375 32.25C14.35 32.25 16.75 29.85 16.75 26.875V21.5H11.375C8.4 21.5 6 23.9 6 26.875C6 29.85 8.4 32.25 11.375 32.25Z" fill="#0ACF83" />
            <path d="M6 5.375C6 2.4 8.4 0 11.375 0H16.75V10.75H11.375C8.4 10.75 6 8.35 6 5.375Z" fill="#F24E1E" />
            <path d="M16.75 0H22.125C25.1 0 27.5 2.4 27.5 5.375C27.5 8.35 25.1 10.75 22.125 10.75H16.75V0Z" fill="#FF7262" />
            <path d="M27.5 16.125C27.5 19.1 25.1 21.5 22.125 21.5C19.15 21.5 16.75 19.1 16.75 16.125C16.75 13.15 19.15 10.75 22.125 10.75C25.1 10.75 27.5 13.15 27.5 16.125Z" fill="#1ABCFE" />
            <defs>
               <clipPath id="clip0_117_25">
                  <rect width="32" height="32" fill="white" />
               </clipPath>
            </defs>
         </svg>

      },
      {
         name: 'React',
         tag: ['All', 'Frontend'],
         icon: <svg width="50" height="45" viewBox="0 0 50 45" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M41.1098 14.5705C40.5776 14.386 40.041 14.2151 39.5004 14.0579C39.5912 13.6829 39.6748 13.3125 39.749 12.9485C40.9674 6.97201 40.1709 2.1572 37.4504 0.571939C34.842 -0.947797 30.5762 0.636873 26.268 4.42575C25.8434 4.79982 25.4283 5.18468 25.0229 5.57997C24.7516 5.31713 24.4754 5.05939 24.1946 4.80687C19.6794 0.755689 15.1536 -0.951745 12.4361 0.638058C9.83003 2.16253 9.05835 6.68878 10.1552 12.3529C10.2644 12.9138 10.3876 13.4719 10.5248 14.0265C9.88413 14.2105 9.26597 14.4063 8.67437 14.6147C3.38065 16.4798 0 19.4027 0 22.4344C0 25.5657 3.62928 28.7064 9.14292 30.6108C9.58994 30.7645 10.0407 30.907 10.4947 31.0381C10.3473 31.6355 10.2164 32.2369 10.1021 32.8417C9.0564 38.4075 9.873 42.8267 12.472 44.3415C15.1564 45.9059 19.6618 44.2981 24.0487 40.4228C24.4044 40.1077 24.7523 39.7837 25.0921 39.4511C25.531 39.8792 25.9817 40.2947 26.4436 40.6973C30.6932 44.3925 34.8901 45.8846 37.4865 44.3656C40.1684 42.7967 41.04 38.0492 39.9084 32.2733C39.8193 31.8207 39.7193 31.3705 39.6086 30.9229C39.925 30.8281 40.2355 30.7306 40.5383 30.6292C46.2703 28.7102 49.9998 25.6075 49.9998 22.4344C49.9998 19.3916 46.5099 16.449 41.1098 14.5705ZM39.8666 28.5805C39.5929 28.6718 39.313 28.7603 39.0268 28.846C38.394 26.8215 37.5401 24.669 36.4949 22.4449C37.4922 20.2738 38.3133 18.1488 38.9283 16.1376C39.4398 16.2872 39.9361 16.4449 40.4146 16.6113C45.0416 18.221 47.8638 20.6007 47.8638 22.4344C47.8638 24.3876 44.8158 26.9232 39.8666 28.5805ZM37.8131 32.6925C38.3135 35.2464 38.3848 37.5556 38.0533 39.361C37.7557 40.9831 37.1568 42.0645 36.4162 42.4977C34.8406 43.4194 31.4709 42.2214 27.8368 39.0612C27.4072 38.6868 26.9879 38.3005 26.5796 37.9026C27.9885 36.3456 29.3965 34.5355 30.7707 32.5251C33.1879 32.3084 35.4715 31.9539 37.5424 31.4702C37.6446 31.8862 37.7348 32.2936 37.8131 32.6925ZM17.046 42.3385C15.5066 42.8877 14.2804 42.9035 13.5392 42.4717C11.9621 41.5525 11.3064 38.004 12.2007 33.2443C12.307 32.6819 12.4288 32.1225 12.5658 31.5669C14.6138 32.0248 16.8808 32.354 19.3036 32.5525C20.6872 34.5197 22.1358 36.3278 23.5958 37.9111C23.2855 38.2144 22.9679 38.5101 22.6432 38.7977C20.7032 40.5112 18.7593 41.727 17.046 42.3385ZM9.83394 28.5685C7.39586 27.7263 5.3824 26.6319 4.00232 25.4376C2.7621 24.3645 2.13612 23.2989 2.13612 22.4344C2.13612 20.5946 4.85037 18.2479 9.37749 16.6529C9.9269 16.4595 10.5019 16.2769 11.0986 16.1056C11.7244 18.1622 12.5451 20.3125 13.5355 22.4869C12.5322 24.6935 11.6997 26.8782 11.0679 28.959C10.6535 28.8391 10.242 28.7088 9.83394 28.5685ZM12.2515 11.9382C11.3119 7.08549 11.9359 3.4249 13.5064 2.50615C15.179 1.5276 18.8778 2.92279 22.7765 6.42095C23.0307 6.64957 23.2808 6.88283 23.5266 7.12062C22.0739 8.697 20.6386 10.4917 19.2673 12.4472C16.9157 12.6675 14.6648 13.0211 12.5953 13.495C12.4677 12.9792 12.3531 12.4599 12.2515 11.9382ZM33.8192 17.3202C33.3303 16.467 32.8234 15.6245 32.2987 14.7933C33.894 14.9972 35.4225 15.2678 36.8578 15.5986C36.427 16.9944 35.8899 18.4535 35.2576 19.9496C34.7955 19.0635 34.3159 18.1869 33.8192 17.3202ZM25.0239 8.66345C26.0091 9.74207 26.9958 10.9462 27.9663 12.2528C25.9975 12.1588 24.0255 12.1584 22.0567 12.2516C23.0282 10.9571 24.0233 9.7545 25.0239 8.66345ZM16.1722 17.3348C15.6816 18.1945 15.211 19.0657 14.7607 19.9476C14.1388 18.4569 13.6066 16.991 13.172 15.5755C14.5986 15.253 16.1198 14.9893 17.705 14.7892C17.1744 15.6254 16.6634 16.4744 16.1722 17.3348ZM17.7505 30.2331C16.1128 30.0483 14.5687 29.7983 13.1425 29.4844C13.5839 28.0437 14.1279 26.5466 14.7632 25.0239C15.2153 25.9065 15.6879 26.7782 16.1806 27.6383C16.6872 28.5225 17.2118 29.3885 17.7505 30.2331ZM25.0829 36.3574C24.0704 35.2537 23.0606 34.0326 22.0745 32.7193C23.0319 32.7572 24.0079 32.7765 24.9999 32.7765C26.019 32.7765 27.0264 32.7535 28.018 32.7088C27.0444 34.0458 26.0614 35.2687 25.0829 36.3574ZM35.2778 24.9461C35.9461 26.4856 36.5094 27.9748 36.9567 29.3909C35.5071 29.7252 33.9418 29.9944 32.2926 30.1944C32.8211 29.3478 33.3329 28.4906 33.8276 27.6235C34.3306 26.742 34.8141 25.8494 35.2778 24.9461ZM31.9774 26.545C31.22 27.8745 30.42 29.1789 29.5788 30.4559C28.0549 30.565 26.5276 30.6192 24.9999 30.6183C23.4438 30.6183 21.9304 30.5694 20.4729 30.4738C19.6097 29.1998 18.7945 27.8932 18.029 26.5569C17.2671 25.2277 16.5556 23.8696 15.8958 22.4858C16.554 21.1016 17.2635 19.7429 18.0228 18.4127L18.0226 18.4129C18.7815 17.0822 19.5902 15.7812 20.447 14.5127C21.9339 14.399 23.4587 14.3398 24.9997 14.3398C26.5477 14.3398 28.0747 14.3996 29.5612 14.514C30.4093 15.7807 31.2128 17.0772 31.9704 18.4012C32.7321 19.7286 33.451 21.0806 34.1258 22.4552C33.4579 23.8438 32.7413 25.2079 31.9774 26.545ZM36.3836 2.44161C38.0578 3.4174 38.709 7.35233 37.657 12.5125C37.5896 12.842 37.5147 13.1769 37.4324 13.5171C35.3578 13.0332 33.1053 12.6734 30.7469 12.4498C29.3731 10.4727 27.9495 8.67529 26.5204 7.11924C26.8949 6.75442 27.2784 6.39905 27.6704 6.05345C31.3618 2.80733 34.8117 1.52562 36.3836 2.44161ZM24.9999 17.9226C27.4657 17.9226 29.4647 19.9427 29.4647 22.4344C29.4647 24.9262 27.4657 26.9463 24.9999 26.9463C22.5341 26.9463 20.5351 24.9262 20.5351 22.4344C20.5351 19.9427 22.5341 17.9226 24.9999 17.9226Z" fill="#00D8FF" />
         </svg>
      },
      {
         name: 'Mongo DB',
         tag: ['All', 'DB'],
         icon: <svg width="21" height="45" viewBox="0 0 21 45" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M14.4043 5.00884C12.5178 2.77105 10.8933 0.49818 10.5614 0.0262131C10.5535 0.0179301 10.544 0.0113355 10.5335 0.00682951C10.523 0.0023235 10.5117 0 10.5003 0C10.4888 0 10.4775 0.0023235 10.467 0.00682951C10.4565 0.0113355 10.447 0.0179301 10.4391 0.0262131C10.1072 0.498262 8.48268 2.77105 6.59611 5.00884C-9.5966 25.656 9.14652 39.59 9.14652 39.59L9.30368 39.6949C9.44339 41.8452 9.79281 44.9398 9.79281 44.9398H11.1903C11.1903 44.9398 11.5395 41.8628 11.6793 39.695L11.8365 39.5725C11.854 39.5901 30.5971 25.6561 14.4043 5.00884ZM10.4915 39.2752C10.4915 39.2752 9.65302 38.5585 9.42592 38.1915V38.1564L10.4391 15.6734C10.4391 15.6035 10.544 15.6035 10.544 15.6734L11.5571 38.1564V38.1915C11.33 38.5585 10.4915 39.2753 10.4915 39.2753" fill="#01EC64" />
         </svg>
      },
      {
         name: 'CSS',
         tag: ['All', 'Frontend'],
         icon: <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M4.70393 28.5306L2.19043 0.337891H29.8104L27.2944 28.5264L15.9837 31.6621L4.70393 28.5306Z" fill="#1572B6" />
            <path d="M16 29.2656L25.1397 26.7316L27.29 2.64307H16V29.2656Z" fill="#33A9DC" />
            <path d="M16 12.8574H20.5755L20.8915 9.31664H16V5.85889H24.6705L24.5875 6.78664L23.7375 16.3151H16V12.8574Z" fill="white" />
            <path d="M16.0212 21.8374L16.006 21.8419L12.1552 20.8022L11.909 18.0444H8.43848L8.92273 23.4737L16.0055 25.4394L16.0212 25.4349V21.8374Z" fill="#EBEBEB" />
            <path d="M20.2818 16.1689L19.8653 20.7994L16.0088 21.8404V25.4379L23.0973 23.4734L23.1493 22.8892L23.7508 16.1689H20.2818Z" fill="white" />
            <path d="M16.0121 5.85889V9.31664H7.66009L7.59084 8.53964L7.43334 6.78664L7.35059 5.85889H16.0121ZM16.0003 12.8579V16.3156H12.1981L12.1288 15.5386L11.9711 13.7856L11.8886 12.8579H16.0003Z" fill="#EBEBEB" />
         </svg>

      },
      {
         name: 'Node.js',
         tag: ['All', 'Backend'],
         icon: <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M16 30C15.6222 30.0002 15.2511 29.9009 14.924 29.712L11.5 27.685C10.989 27.399 11.238 27.298 11.407 27.239C11.9506 27.0714 12.4709 26.8362 12.956 26.539C12.9965 26.52 13.0413 26.5117 13.086 26.515C13.1306 26.5183 13.1737 26.5332 13.211 26.558L15.842 28.121C15.891 28.1469 15.9455 28.1605 16.001 28.1605C16.0564 28.1605 16.111 28.1469 16.16 28.121L26.42 22.199C26.4682 22.1705 26.5081 22.1298 26.5356 22.081C26.5632 22.0322 26.5774 21.9771 26.577 21.921V10.075C26.5771 10.0182 26.5625 9.96221 26.5347 9.91263C26.5068 9.86304 26.4666 9.8215 26.418 9.79203L16.158 3.87503C16.1097 3.8475 16.0551 3.83302 15.9995 3.83302C15.9439 3.83302 15.8893 3.8475 15.841 3.87503L5.58697 9.79403C5.53806 9.82296 5.49745 9.86402 5.46907 9.91325C5.44068 9.96248 5.4255 10.0182 5.42497 10.075V21.916C5.42562 21.9718 5.44081 22.0264 5.46905 22.0744C5.49729 22.1225 5.5376 22.1623 5.58597 22.19L8.39997 23.814C9.92497 24.576 10.859 23.678 10.859 22.776V11.085C10.859 11.0055 10.8906 10.9292 10.9468 10.8729C11.0031 10.8166 11.0794 10.785 11.159 10.785H12.459C12.5385 10.785 12.6148 10.8166 12.6711 10.8729C12.7274 10.9292 12.759 11.0055 12.759 11.085V22.777C12.759 24.812 11.651 25.977 9.72097 25.977C8.88843 25.9909 8.06902 25.7683 7.35797 25.335L4.66097 23.788C4.33383 23.5971 4.06238 23.3238 3.87361 22.9954C3.68484 22.6669 3.58533 22.2948 3.58497 21.916V10.075C3.5838 9.69552 3.68263 9.3224 3.87153 8.99323C4.06042 8.66407 4.33271 8.39049 4.66097 8.20003L14.922 2.27603C15.2526 2.09555 15.6233 2.00098 16 2.00098C16.3767 2.00098 16.7473 2.09555 17.078 2.27603L27.338 8.20003C27.665 8.3907 27.9365 8.66362 28.1254 8.99166C28.3143 9.31971 28.4142 9.69147 28.415 10.07V21.916C28.4145 22.2949 28.3148 22.6671 28.1259 22.9955C27.9369 23.324 27.6653 23.5972 27.338 23.788L17.078 29.712C16.7502 29.9012 16.3784 30.0006 16 30Z" fill="#83CD29" />
            <path d="M14.0537 17.9531C14.0537 17.8736 14.0853 17.7972 14.1416 17.741C14.1978 17.6847 14.2741 17.6531 14.3537 17.6531H15.6807C15.7516 17.6533 15.8201 17.6787 15.8741 17.7246C15.9281 17.7706 15.9641 17.8342 15.9757 17.9041C16.1757 19.2551 16.7757 19.9361 19.4887 19.9361C21.6497 19.9361 22.5707 19.4471 22.5707 18.3001C22.5707 17.6391 22.3097 17.1481 18.9507 16.8191C16.1427 16.5411 14.4067 15.9191 14.4067 13.6751C14.4067 11.6051 16.1517 10.3701 19.0767 10.3701C22.3637 10.3701 23.9907 11.5111 24.1967 13.9591C24.1999 14 24.1946 14.0411 24.1812 14.0798C24.1679 14.1186 24.1468 14.1542 24.1191 14.1845C24.0915 14.2147 24.0579 14.239 24.0205 14.2558C23.9831 14.2726 23.9427 14.2816 23.9017 14.2821H22.5657C22.4987 14.2812 22.4339 14.2578 22.3817 14.2158C22.3295 14.1737 22.2929 14.1154 22.2777 14.0501C21.9587 12.6291 21.1777 12.1751 19.0777 12.1751C16.7177 12.1751 16.4437 12.9971 16.4437 13.6131C16.4437 14.3591 16.7677 14.5771 19.9537 14.9981C23.1067 15.4151 24.6047 16.0051 24.6047 18.2211C24.6047 20.4571 22.7407 21.7371 19.4897 21.7371C14.9947 21.7431 14.0537 19.6821 14.0537 17.9531Z" fill="#83CD29" />
         </svg>
      },
      {
         name: 'JavaScript',
         tag: ['All', 'Backend', 'Frontend'],
         icon: <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M2 2H30V30H2V2Z" fill="#F5DE19" />
            <path d="M20.8091 23.8749C21.048 24.3592 21.4188 24.7662 21.8787 25.0492C22.3386 25.3323 22.8691 25.4798 23.4091 25.4749C24.4991 25.4749 25.1961 24.9299 25.1961 24.1749C25.1961 23.2749 24.4801 22.9529 23.2801 22.4279L22.6221 22.1459C20.7221 21.3369 19.4621 20.3239 19.4621 18.1819C19.4621 16.2089 20.9621 14.7059 23.3151 14.7059C24.0768 14.651 24.8377 14.8215 25.5032 15.1962C26.1686 15.5709 26.709 16.1331 27.0571 16.8129L25.0001 18.1279C24.866 17.7909 24.6327 17.5026 24.331 17.3011C24.0294 17.0997 23.6737 16.9946 23.3111 16.9999C23.1528 16.984 22.993 17.0013 22.8418 17.0506C22.6907 17.1 22.5514 17.1803 22.433 17.2864C22.3145 17.3925 22.2195 17.5221 22.1539 17.667C22.0883 17.8119 22.0536 17.9688 22.0521 18.1279C22.0521 18.9169 22.5411 19.2369 23.6701 19.7279L24.3281 20.0099C26.5641 20.9689 27.8281 21.9459 27.8281 24.1429C27.8281 26.5119 25.9671 27.8099 23.4681 27.8099C22.4945 27.8713 21.5239 27.6499 20.6732 27.1725C19.8224 26.6951 19.1279 25.9819 18.6731 25.1189L20.8091 23.8749ZM11.5141 24.1029C11.9271 24.8359 12.3031 25.4559 13.2071 25.4559C14.0711 25.4559 14.6171 25.1179 14.6171 23.8029V14.8559H17.2481V23.8379C17.2481 26.5619 15.6481 27.8019 13.3191 27.8019C12.4958 27.8469 11.6782 27.6417 10.9738 27.2133C10.2693 26.785 9.71093 26.1535 9.37207 25.4019L11.5141 24.1029Z" fill="black" />
         </svg>
      },
      {
         name: 'Redux',
         tag: ['All', 'Frontend'],
         icon: <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M22.1728 22.0276C19.9228 26.6276 15.9828 29.7226 10.7703 30.7401C9.97109 30.9359 9.15062 31.0317 8.32779 31.0251C5.32779 31.0251 2.57779 29.7751 1.24279 27.7276C-0.549711 25.0001 -1.15971 19.2176 4.75029 14.9401C4.87029 15.5926 5.11529 16.4876 5.27779 17.0176C4.11762 17.8795 3.16798 18.9932 2.50029 20.2751C1.40029 22.4351 1.52279 24.5926 2.82529 26.5876C3.72529 27.9326 5.15029 28.7501 6.98279 29.0001C9.27163 29.2898 11.5936 28.8525 13.6203 27.7501C16.7978 26.0801 18.9153 24.0851 20.3003 21.3576C19.9087 20.9528 19.6769 20.42 19.6478 19.8576C19.6269 19.254 19.8462 18.6668 20.2577 18.2249C20.6692 17.7829 21.2393 17.5222 21.8428 17.5001H21.9278C22.5148 17.4971 23.0804 17.7199 23.5077 18.1224C23.935 18.5249 24.1912 19.0763 24.2233 19.6624C24.2554 20.2485 24.061 20.8245 23.6803 21.2713C23.2995 21.7181 22.7616 22.0013 22.1778 22.0626L22.1728 22.0276ZM29.3403 16.9776C32.3928 20.4376 32.4753 24.5101 31.2953 26.8726C30.1953 29.0301 27.2953 31.1901 23.3953 31.1901C21.5747 31.1528 19.7838 30.7221 18.1453 29.9276C18.7178 29.5201 19.5303 28.8676 19.9778 28.4601C21.2412 29.0077 22.6009 29.2983 23.9778 29.3151C26.5028 29.3151 28.4153 28.1351 29.5553 25.9776C30.2878 24.5526 30.3303 22.8826 29.6378 21.1726C28.7882 19.0209 27.2761 17.1954 25.3203 15.9601C22.7545 14.2304 19.7297 13.3084 16.6353 13.3126H15.9028C15.732 13.7071 15.4541 14.046 15.1006 14.2908C14.7472 14.5355 14.3322 14.6765 13.9028 14.6976H13.8253C13.2313 14.6903 12.6636 14.4517 12.2427 14.0325C11.8218 13.6134 11.5809 13.0467 11.5712 12.4527C11.5614 11.8588 11.7835 11.2845 12.1904 10.8517C12.5973 10.419 13.1569 10.1619 13.7503 10.1351H13.8328C14.2463 10.1354 14.6517 10.2496 15.0046 10.4653C15.3574 10.681 15.644 10.9897 15.8328 11.3576H16.4853C21.6853 11.3576 26.2503 13.3526 29.3403 16.9776ZM8.65279 22.7276C8.60977 22.3124 8.71036 21.895 8.93779 21.5451C6.65779 17.5951 5.43779 12.5876 7.31029 7.37506C8.65279 3.45756 12.0328 0.810059 15.6978 0.810059C19.6078 0.810059 23.6803 4.23256 24.1678 10.8276C23.5578 10.6251 22.6678 10.3276 22.1328 10.2176C22.0003 8.06006 20.1778 2.68506 15.8603 2.76506C14.3128 2.80756 12.0328 3.54006 10.8603 5.04506C9.4101 6.8417 8.5664 9.05159 8.45029 11.3576C8.17529 14.5195 8.91715 17.6867 10.5678 20.3976C10.6589 20.3643 10.756 20.3506 10.8528 20.3576H10.9328C11.5375 20.3466 12.1218 20.5763 12.5571 20.9962C12.9924 21.416 13.2431 21.9916 13.254 22.5963C13.265 23.201 13.0353 23.7853 12.6154 24.2206C12.1956 24.6559 11.62 24.9066 11.0153 24.9176H10.9328C10.3429 24.9155 9.77651 24.6858 9.35175 24.2764C8.927 23.867 8.67661 23.3095 8.65279 22.7201V22.7276Z" fill="#764ABC" />
         </svg>

      },
      {
         name: 'React Router',
         tag: ['All', 'Frontend'],
         icon: <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M24.7603 12.5788C23.8488 12.2918 23.3783 12.3885 22.4226 12.2838C20.9451 12.1225 20.3563 11.544 20.1066 10.0555C19.9668 9.22453 20.1318 8.00778 19.7751 7.25453C19.0928 5.81803 17.4963 5.17378 15.8926 5.54153C14.5383 5.85253 13.4116 7.20803 13.3491 8.59953C13.2778 10.1883 14.1816 11.544 15.7333 12.012C16.4708 12.2345 17.2541 12.3465 18.0241 12.4033C19.4363 12.5065 19.5448 13.2928 19.9266 13.94C20.1676 14.348 20.4008 14.75 20.4008 15.9668C20.4008 17.1835 20.1661 17.5853 19.9268 17.9933C19.5448 18.639 19.0736 19.062 17.6613 19.1665C16.8913 19.2235 16.1063 19.3355 15.3708 19.5583C13.8188 20.0275 12.9151 21.3815 12.9863 22.9705C13.0488 24.362 14.1756 25.7175 15.5298 26.0285C17.1336 26.3975 18.7301 25.752 19.4123 24.3155C19.7706 23.5623 19.9668 22.7088 20.1066 21.878C20.3578 20.3893 20.9466 19.8108 22.4226 19.6493C23.3783 19.5448 24.3676 19.6493 25.2633 19.1398C26.2096 18.4473 27.0553 17.4073 27.0553 15.9668C27.0553 14.5258 26.1441 13.0153 24.7603 12.5788Z" fill="#F44250" />
            <path d="M9.60001 19.3434C7.73751 19.3434 6.21801 17.8189 6.21801 15.9497C6.21801 14.0804 7.73726 12.5562 9.59976 12.5562C11.4623 12.5562 12.9818 14.0807 12.9818 15.9497C12.9818 17.8172 11.461 19.3434 9.59976 19.3434H9.60001ZM3.37001 26.2402C1.51001 26.2357 -0.00449 24.7052 1.00022e-05 22.8344C0.00451 20.9669 1.52976 19.4469 3.39376 19.4529C5.25476 19.4574 6.76951 20.9879 6.76376 22.8584C6.75926 24.7244 5.23376 26.2447 3.37001 26.2402ZM28.498 26.2402C26.6325 26.2504 25.1015 24.7364 25.0908 22.8719C25.0805 20.9999 26.5893 19.4634 28.4473 19.4529C30.3128 19.4424 31.844 20.9564 31.8545 22.8209C31.8648 24.6914 30.356 26.2297 28.498 26.2402Z" fill="#121212" />
         </svg>
      },
   ]

   const [isActive, setActive] = useState('All')
   return (
      <div id={'skills'}>
         <Heading title={'Skills & Technologies'} />
         <div className={s.Skills}>
            <div className={s.left}>
               <div className={s.title}><span className={s.backlight}>Full</span>-stack</div>
               <p className={s.text}>Full-stack development combines all three areas, allowing a specialist to cover the entire product creation process. This approach provides a deep understanding of the relationships between design, interface, and backend, but requires constant training and trend tracking in all areas.</p>
               <div className={s.canvas}><img src='src/assets/skills.svg' /></div>
            </div>
            <div className={s.rigth}>
               <div className={s.sorting}>
                  <button
                     onClick={() => setActive('All')}
                     className={`${s.chapter} ${isActive === 'All' ? s.active : ''}`}
                  >
                     All
                  </button>
                  <button
                     onClick={() => setActive('Design')}
                     className={`${s.chapter} ${isActive === 'Design' ? s.active : ''}`}>
                     Design
                  </button>
                  <button
                     onClick={() => setActive('Frontend')}
                     className={`${s.chapter} ${isActive === 'Frontend' ? s.active : ''}`}>
                     Frontend
                  </button>
                  <button
                     onClick={() => setActive('Backend')}
                     className={`${s.chapter} ${isActive === 'Backend' ? s.active : ''}`}>
                     Backend
                  </button>
                  <button
                     onClick={() => setActive('DB')}
                     className={`${s.chapter} ${isActive === 'DB' ? s.active : ''}`}>
                     DB
                  </button>
               </div>
               <div className={s.arrSkills}>
                  {skills.filter((skill) => skill.tag.includes(isActive)).map(data => (
                     <>
                        {console.log(data)}
                        <SkillCard data={data} />
                     </>
                  ))}
               </div>
            </div>
         </div>
      </div>
   )
}

export default Skills